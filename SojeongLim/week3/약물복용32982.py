# 문제
# 감기에 걸린 유겸이는 병원에서 
# $N$일치 감기약을 받아왔다. 아픈 것이 싫은 유겸이는 감기약을 한 번 먹기 시작한 이후로 감기약을 다 먹는 순간까지 약효가 끊기지 않았으면 한다.

# 유겸이는 감기약을 하루에 세 번, 식후에 바로 복용해야 하고 약효의 지속 시간은 
# $K$분이다. 유겸이는 하루 세 끼를 먹을 수 있는 시간대가 정해져 있다. 식사에 걸리는 시간 및 약을 먹는 데 걸리는 시간은 고려하지 않는다. 당신은 세 번의 식사 시간을 날마다 적절히 배치해서 
# $N$일 째의 마지막 약을 먹을 때까지 약효가 끊기지 않게 할 수 있는지 알아내야 한다.

# 입력
# 첫 번째 줄에 약을 먹어야 하는 일수 
# $N$과 약효의 지속 시간 
# $K$가 공백으로 구분되어 주어진다. 
# $(1 \leq N \leq 100\,000; 1 \leq K \leq 1\,440)$ 

# 두 번째 줄에 
# $A_s,A_e,B_s,B_e,C_s,C_e (0 \leq A_s \leq A_e \lt B_s \leq B_e \lt C_s \leq C_e \lt 1\,440)$가 공백으로 구분되어 주어진다. 각각 세 끼를 먹을 수 있는 시간대의 시작과 끝을 분 단위로 나타낸다. 
# $1$일은 
# $0$분부터 시작하여 
# $1439$분까지 총 
# $1440$분이다.

# 입력으로 주어지는 모든 수는 정수이다.

# 출력

# $N$일 째의 마지막 약을 먹을 때까지 약효를 끊기지 않게 할 수 있다면 YES, 아니라면 NO를 출력한다.


####실패


n, k = map(int, input().split())
As, Ae, Bs, Be, Cs, Ce = map(int, input().split())
#print(2*k , Cs - Ae, As + 1440 - Be, Bs +1440 - Ce) 
if ((Cs - Ae) <= 2*k ) & ((As + 1440 - Be) <= 2*k ) & ((Bs +1440 - Ce) <= 2*k):
    if Ae + k > Bs:
        print("NO")
    elif Be + k > Cs:
        print("NO")
    elif Ce + k > As+1440:
        print("NO")
    else:
        print("YES")
else:  
    print("NO")

     


##########################################################chat gpt 답변
'''
n, k = map(int, input().split())
As, Ae, Bs, Be, Cs, Ce = map(int, input().split())

# 첫 번째 약을 먹은 후 약효가 두 번째 약을 먹기 전에 끊어지지 않아야 한다
if As + k > Bs:
    print("NO")
# 두 번째 약을 먹은 후 약효가 세 번째 약을 먹기 전에 끊어지지 않아야 한다
elif Bs + k > Cs:
    print("NO")
# 세 번째 약을 먹은 후 약효가 하루 끝까지 이어져야 한다
elif Cs + k > As+1440:
    print("NO")
else:
    print("YES")



'''